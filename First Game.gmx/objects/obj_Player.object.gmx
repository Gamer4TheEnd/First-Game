<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_still_right</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creation Defaults
if room = rm_alphalevel_moon
{
    grav = 0.15
}
else
{
grav = 0.3;
}

vsp = 0;
hsp = 0;
jumpspeed = 8;
movespeed = 5;
image_speed = 8/60;
globalvar player_dir;
player_dir = 1;

globalvar checkpoints;
checkpoints = 0;
yplus = 0;
prs = false;
global.enbnc = false;
walljumps = 0;
walksnd = false;
inair = false;
act = false;
maxvsp = 10;
roll = false;
roll2 = false;
canroll = true;

//for squish
draw_xscale = 1;
draw_yscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>roll2 = false;
alarm[1] = 1 * 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canroll = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>roll = false;
alarm[1] = 1 * 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Movement

//Input\\
right_key = keyboard_check(ord("D")) or keyboard_check(vk_right)
left_key = -(keyboard_check(ord("A")) or keyboard_check(vk_left))
space_bar = keyboard_check_pressed(vk_space) or keyboard_check_pressed(vk_up) or gamepad_button_check_pressed(0,gp_face1)
space_bar_held = keyboard_check(vk_space) or keyboard_check(vk_up) or gamepad_button_check(0,gp_face1)

//Movement (momentum)\\

if right_key
{
    if hsp &lt; 5
    {
        hsp += 0.5
    }
}

if -left_key
{
    if hsp &gt; -5
    {
        hsp -= 0.5
    }
}

if hsp &gt; 0 &amp;&amp; !right_key
{
    hsp -= 0.5;
}

if hsp &lt; 0 &amp;&amp; !-left_key
{
    hsp += 0.5;
}

//Movement (old)\\
/*
move = right_key + left_key
hsp = move * movespeed
*/

//Gravity\\
if (vsp &lt; maxvsp) vsp += grav;

//Jumping\\

if(place_meeting(x,y+1,obj_wall))
{
    vsp += space_bar * -jumpspeed
}

if global.enbnc = false
{
if (vsp &lt; 0) &amp;&amp; (!space_bar_held) vsp = max(vsp, -jumpspeed/4)
}

//Wall Jumps\\
/*
if(place_meeting(x,y+1,obj_wall))
walljumps = 0;

if !(place_meeting(x,y+1,obj_wall))
walljumps = 1;*/

//Jump Sound Effect//
if(place_meeting(x,y+1,obj_wall)) &amp;&amp; (space_bar = 1)
{
    audio_play_sound(snd_player_jump,15,false);
}

//Horizontal Collision\\
if (place_meeting(x+hsp,y,obj_wall))
{
    yplus = 0;
    while(place_meeting(x+hsp, y-yplus, obj_wall) &amp;&amp; yplus &lt;= abs(1*hsp)) yplus += 1;
    if place_meeting(x+hsp, y-yplus, obj_wall)
    {
        while(!place_meeting(x+sign(hsp),y,obj_wall)) x += sign(hsp);
        hsp = 0;
    }
    else
    {
        y -= yplus;
    }
}
x += hsp;

//Vertical Collision\\
if (place_meeting(x,y+vsp,obj_wall))
{
    while(!place_meeting(x,y+sign(vsp),obj_wall))
    {
        y += sign(vsp);
    }
    global.enbnc = false;
    vsp = 0;
}

y += vsp;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Animation

//Running Right//
if (x &gt; xprevious)
{
    if(sprite_index != spr_player_running_right)
    {
        sprite_index = spr_player_running_right
    }
    player_dir = 1
    image_speed = 16/60
}

//Running Left//
else if (x &lt; xprevious)
{
    if(sprite_index != spr_player_running_left)
    {
        sprite_index = spr_player_running_left
    }
    player_dir = -1
    image_speed = 16/60
}

//Jumping Still Right//
else if !place_meeting(x, y + 2, obj_wall) &amp;&amp; (player_dir = 1) &amp;&amp; y &lt; yprevious
{
    if(sprite_index != spr_player_jumping_still_right)
    {
        sprite_index = spr_player_jumping_still_right
    }
}

//Jumping Still Left//
else if !place_meeting(x, y + 2, obj_wall) &amp;&amp; (player_dir = -1) &amp;&amp; y &lt; yprevious
{
    if(sprite_index != spr_player_jumping_still_left)
    {
        sprite_index = spr_player_jumping_still_left
    }
}

//Falling Still Right//
else if (y &gt; yprevious) &amp;&amp; (player_dir = 1)
{
    if(sprite_index != spr_player_falling_still_right)
    {
        sprite_index = spr_player_falling_still_right
    }
}
//Falling Still Left//
else if (y &gt; yprevious) &amp;&amp; (player_dir = -1)
{
    if(sprite_index != spr_player_falling_still_left)
    {
        sprite_index = spr_player_falling_still_left
    }
}

//Standing Still Left &amp; Right Normal//
else
{
        //Right//
    if (player_dir = 1)
    {
        sprite_index = spr_player_still_right
        image_speed = 8/60
    }
        //Left//
    if (player_dir = -1)
    {
        sprite_index = spr_player_still_left
        image_speed = 8/60
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Gun Power Up &amp; Bullets Add
if (place_meeting(x,y,obj_powerup_gun_crystal))
{
    global.bullets += 10
    instance_create(x,y,obj_player_powerup_gun);
    obj_player_powerup_gun.vsp = obj_player.vsp
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Super Speed Power Up
if (place_meeting(x,y,obj_powerup_superspeed_crystal))
{
    instance_create(x,y,obj_player_powerup_superspeed_limit);
    obj_player_powerup_superspeed_limit.vsp = obj_player.vsp
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Super Jump Power Up
if (place_meeting(x,y,obj_powerup_superjump_crystal))
{
    instance_create(x,y,obj_player_powerup_superjump_limit);
    obj_player_powerup_superjump_limit.vsp = obj_player.vsp
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checkpoints
//Veriables//
checkpoint1 = instance_find(obj_checkpoint_position,0)
checkpoint2 = instance_find(obj_checkpoint_position,1)
checkpoint3 = instance_find(obj_checkpoint_position,2)
checkpoint4 = instance_find(obj_checkpoint_position,3)
checkpoint5 = instance_find(obj_checkpoint_position,4)
checkpoint6 = instance_find(obj_checkpoint_position,5)
checkpoint7 = instance_find(obj_checkpoint_position,6)
checkpoint8 = instance_find(obj_checkpoint_position,7)
checkpoint9 = instance_find(obj_checkpoint_position,8)
checkpoint10 = instance_find(obj_checkpoint_position,9)
checkpoint11 = instance_find(obj_checkpoint_position,10)
checkpoint12 = instance_find(obj_checkpoint_position,11)
checkpoint13 = instance_find(obj_checkpoint_position,12)
checkpoint14 = instance_find(obj_checkpoint_position,13)
checkpoint15 = instance_find(obj_checkpoint_position,14)
checkpoint16 = instance_find(obj_checkpoint_position,15)
checkpoint17 = instance_find(obj_checkpoint_position,16)
checkpoint18 = instance_find(obj_checkpoint_position,17)
checkpoint19 = instance_find(obj_checkpoint_position,18)
checkpoint20 = instance_find(obj_checkpoint_position,19)

//Actions//

//Checkpoint 1//
if (place_meeting(x,y,checkpoint1)) &amp;&amp; checkpoints &lt; 1
{
    obj_checkpoint.x = checkpoint1.x
    obj_checkpoint.y = checkpoint1.y
    instance_create(checkpoint1.x, checkpoint1.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 1
}

//Checkpoint 2//
if (place_meeting(x,y,checkpoint2)) &amp;&amp; checkpoints &lt; 2
{
    obj_checkpoint.x = checkpoint2.x
    obj_checkpoint.y = checkpoint2.y
    instance_create(checkpoint2.x, checkpoint2.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 2
}

//Checkpoint 3//
if (place_meeting(x,y,checkpoint3)) &amp;&amp; checkpoints &lt; 3
{
    obj_checkpoint.x = checkpoint3.x
    obj_checkpoint.y = checkpoint3.y
    instance_create(checkpoint3.x, checkpoint3.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 3
}

//Checkpoint 4//
if (place_meeting(x,y,checkpoint4)) &amp;&amp; checkpoints &lt; 4
{
    obj_checkpoint.x = checkpoint4.x
    obj_checkpoint.y = checkpoint4.y
    instance_create(checkpoint4.x, checkpoint4.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 4
}

//Checkpoint 5//
if (place_meeting(x,y,checkpoint5)) &amp;&amp; checkpoints &lt; 5
{
    obj_checkpoint.x = checkpoint5.x
    obj_checkpoint.y = checkpoint5.y
    instance_create(checkpoint5.x, checkpoint5.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 5
}

//Checkpoint 6//
if (place_meeting(x,y,checkpoint6)) &amp;&amp; checkpoints &lt; 6
{
    obj_checkpoint.x = checkpoint6.x
    obj_checkpoint.y = checkpoint6.y
    instance_create(checkpoint6.x, checkpoint6.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 6
}

//Checkpoint 7//
if (place_meeting(x,y,checkpoint7)) &amp;&amp; checkpoints &lt; 7
{
    obj_checkpoint.x = checkpoint1.x
    obj_checkpoint.y = checkpoint1.y
    instance_create(checkpoint7.x, checkpoint7.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 7
}

//Checkpoint 8//
if (place_meeting(x,y,checkpoint8)) &amp;&amp; checkpoints &lt; 8
{
    obj_checkpoint.x = checkpoint8.x
    obj_checkpoint.y = checkpoint8.y
    instance_create(checkpoint8.x, checkpoint8.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 8
}

//Checkpoint 9//
if (place_meeting(x,y,checkpoint9)) &amp;&amp; checkpoints &lt; 9
{
    obj_checkpoint.x = checkpoint9.x
    obj_checkpoint.y = checkpoint9.y
    instance_create(checkpoint9.x, checkpoint9.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 9
}

//Checkpoint 10//
if (place_meeting(x,y,checkpoint10)) &amp;&amp; checkpoints &lt; 10
{
    obj_checkpoint.x = checkpoint10.x
    obj_checkpoint.y = checkpoint10.y
    instance_create(checkpoint10.x, checkpoint10.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 10
}

//Checkpoint 11//
if (place_meeting(x,y,checkpoint11)) &amp;&amp; checkpoints &lt; 11
{
    obj_checkpoint.x = checkpoint11.x
    obj_checkpoint.y = checkpoint11.y
    instance_create(checkpoint11.x, checkpoint11.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 11
}

//Checkpoint 12//
if (place_meeting(x,y,checkpoint12)) &amp;&amp; checkpoints &lt; 12
{
    obj_checkpoint.x = checkpoint12.x
    obj_checkpoint.y = checkpoint12.y
    instance_create(checkpoint12.x, checkpoint12.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 12
}

//Checkpoint 13//
if (place_meeting(x,y,checkpoint13)) &amp;&amp; checkpoints &lt; 13
{
    obj_checkpoint.x = checkpoint13.x
    obj_checkpoint.y = checkpoint13.y
    instance_create(checkpoint13.x, checkpoint13.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 13
}

//Checkpoint 14//
if (place_meeting(x,y,checkpoint14)) &amp;&amp; checkpoints &lt; 14
{
    obj_checkpoint.x = checkpoint14.x
    obj_checkpoint.y = checkpoint14.y
    instance_create(checkpoint14.x, checkpoint14.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 14
}

//Checkpoint 15//
if (place_meeting(x,y,checkpoint15)) &amp;&amp; checkpoints &lt; 15
{
    obj_checkpoint.x = checkpoint15.x
    obj_checkpoint.y = checkpoint15.y
    instance_create(checkpoint15.x, checkpoint15.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 15
}

//Checkpoint 16//
if (place_meeting(x,y,checkpoint16)) &amp;&amp; checkpoints &lt; 16
{
    obj_checkpoint.x = checkpoint16.x
    obj_checkpoint.y = checkpoint16.y
    instance_create(checkpoint16.x, checkpoint16.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 16
}

//Checkpoint 17//
if (place_meeting(x,y,checkpoint17)) &amp;&amp; checkpoints &lt; 17
{
    obj_checkpoint.x = checkpoint17.x
    obj_checkpoint.y = checkpoint17.y
    instance_create(checkpoint17.x, checkpoint17.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 17
}

//Checkpoint 18//
if (place_meeting(x,y,checkpoint18)) &amp;&amp; checkpoints &lt; 18
{
    obj_checkpoint.x = checkpoint18.x
    obj_checkpoint.y = checkpoint18.y
    instance_create(checkpoint18.x, checkpoint18.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 18
}

//Checkpoint 19//
if (place_meeting(x,y,checkpoint19)) &amp;&amp; checkpoints &lt; 19
{
    obj_checkpoint.x = checkpoint19.x
    obj_checkpoint.y = checkpoint19.y
    instance_create(checkpoint19.x, checkpoint19.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 19
}

//Checkpoint 20//
if (place_meeting(x,y,checkpoint20)) &amp;&amp; checkpoints &lt; 20
{
    obj_checkpoint.x = checkpoint20.x
    obj_checkpoint.y = checkpoint20.y
    instance_create(checkpoint20.x, checkpoint20.y-40, obj_checkpoint_text)
    audio_play_sound(snd_checkpoint,8,false)
    checkpoints = 20
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///script initalization

scr_camera();
scr_render();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Parallax V3
background_x[0] = view_xview
background_x[1] = view_xview/1
background_x[2] = view_xview/1.05
background_x[3] = view_xview/1.6
background_x[4] = view_xview/3

background_y[0] = view_yview
background_y[1] = view_yview - 100
background_y[2] = view_yview/1.05 - 60
background_y[3] = view_yview/1.4 + 40
background_y[4] = view_yview/1.8 + 140
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SQUISH EFFECT

if global.squish = 2
{
    if space_bar
    {
        draw_yscale = 1.2;
        draw_xscale = .85;
    }

    draw_xscale = lerp(draw_xscale, 1, .1);
    draw_yscale = lerp(draw_yscale, 1, .1);

    if (place_meeting(x, y+1, obj_wall) &amp;&amp; !place_meeting(x, yprevious+1, obj_wall))
    {
        draw_yscale = .75
        draw_xscale = 1.25
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Walk sound effect &amp; land sound effect

    if walksnd = false
    {
    if x &gt; xprevious
        {
        walksnd = true;
        audio_play_sound(snd_walk, 7, true);
        }
    }

    if walksnd = false
    {
    if x &lt; xprevious
        {
        walksnd = true;
        audio_play_sound(snd_walk, 7, true);
        }
    }
    if x = xprevious
    {
    walksnd = false;
    audio_stop_sound(snd_walk);
    }

if !place_meeting(x, y + 1, obj_wall)
{
    inair = true;
    audio_stop_sound(snd_walk);
    walksnd = false;
}
    
if place_meeting(x, y + 1, obj_wall) &amp;&amp; inair = true
{
    inair = false;
    audio_play_sound(snd_land, 7, false);
    instance_create(x, y, obj_dust);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Water Slow Down
if place_meeting(x, y, obj_water_top) || place_meeting(x, y, obj_water_mid) || place_meeting(x, y, obj_water_death)
{
    act = true;
    movespeed = 2;
    jumpspeed = 5;
}
else
{
    if act = true
    {
    movespeed = 5;
    jumpspeed = 8;
    act = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rolling

if keyboard_check_pressed(ord('E')) &amp;&amp; canroll = true
{
    if player_dir = 1
    {
    roll = true;
    alarm[0] = 0.3*60;
    canroll = false;
    audio_play_sound(snd_dash, 8, false);
    }
    
    if player_dir = -1
    {
    roll2 = true;
    alarm[2] = 0.3*60
    canroll = false;
    audio_play_sound(snd_dash, 8, false);
    }
}

//right roll
if roll = true
{
    if hsp &lt; 8
    {
    hsp += 2;
    }
}
else
{
    if hsp &gt; 5
    {
        hsp -= 1
    }
}

//left roll
if roll2 = true
{
    if hsp &gt; -8
    {
    hsp -= 2;
    }
}
else
{
    if hsp &lt; -5
    {
        hsp += 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lives &amp; Game Over
if (lives &gt; 0)
{
    lives -= 1
    instance_create(obj_checkpoint.x,obj_checkpoint.y,obj_player)
    instance_destroy();
}
if (lives = 0)
{
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, draw_xscale, draw_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Restart Room
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if view_hview &gt; 67.5
{
    view_hview = view_hview - 36  
    view_yview = view_yview + 18
    global.camspd += 0.01
}

if view_wview &gt; 120
{
    view_wview = view_wview - 64
    view_xview = view_xview + 32
    global.camspd += 0.01
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if view_hview &lt; 540
{
    view_hview = view_hview + 36  
    view_yview = view_yview - 18
    global.camspd -= 0.01
}

if view_wview &lt; 960
{
    view_wview = view_wview + 64
    view_xview = view_xview - 32
    global.camspd -= 0.01
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
