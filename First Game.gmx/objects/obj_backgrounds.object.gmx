<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Parallax Tracking

//Variables\\
globalvar parallax_tracking;
parallax_tracking = 0;

grassland = (rm_test_room = 1) or (rm_alphalevel_1) or (rm_alphalevel_2) or (rm_alphalevel_3)
desert = (rm_test_desert_room = 1)
 
//Actions\\
if (grassland = 1)
{
    parallax_tracking = 1
}

if (desert = 1)
{
    parallax_tracking = 2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*///Parallax Grassland
          //Backgrounds//
if (instance_exists(obj_player)) &amp;&amp; (parallax_tracking = 1)
{
        //Standing Still//
    if (view_xview[0] = 0) &amp;&amp; (obj_player.x = obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] &gt; 0) &amp;&amp; (obj_player.x = obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] &lt; 0) &amp;&amp; (obj_player.x = obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }

        //Moving Left//
    if (view_xview[0] &lt; 0) &amp;&amp; (obj_player.x &lt; obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] = 0) &amp;&amp; (obj_player.x &lt; obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] &gt; 0) &amp;&amp; (obj_player.x &lt; obj_player.xprevious)
    {
        background_hspeed[0] = -0
        background_hspeed[1] = -4.5
        background_hspeed[2] = -4.4
        background_hspeed[3] = -3.6
    }
    if (obj_player.x + 500 &gt; room_width) &amp;&amp; (obj_player.x &lt; obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }

        //Moving Right//
    if (view_xview[0] &lt; 0) &amp;&amp; (obj_player.x &gt; obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] = 0) &amp;&amp; (obj_player.x &gt; obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] &gt; 0) &amp;&amp; (obj_player.x &gt; obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 4.5
        background_hspeed[2] = 4.4
        background_hspeed[3] = 3.6
    }
    if (obj_player.x + 500 &gt; room_width) &amp;&amp; (obj_player.x &gt; obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    
        //Friction//
        //Right//
    if (view_xview[0] &lt; 0) &amp;&amp; (obj_player.x &gt; obj_player.xprevious) &amp;&amp; (obj_player.hsp != 5)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] = 0) &amp;&amp; (obj_player.x &gt; obj_player.xprevious) &amp;&amp; (obj_player.hsp != 5)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] &gt; 0) &amp;&amp; (obj_player.x &gt; obj_player.xprevious) &amp;&amp; (obj_player.hsp != 5)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
        //Left//
    if (view_xview[0] &lt; 0) &amp;&amp; (obj_player.x &lt; obj_player.xprevious) &amp;&amp; (obj_player.hsp != -5)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] = 0) &amp;&amp; (obj_player.x &lt; obj_player.xprevious) &amp;&amp; (obj_player.hsp != -5)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] &gt; 0) &amp;&amp; (obj_player.x &lt; obj_player.xprevious) &amp;&amp; (obj_player.hsp != -5)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = -0.05
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
        //Jumping//
    if (view_yview[0] &gt; 0) &amp;&amp; (obj_player.y &lt; obj_player.yprevious)
    {
        background_vspeed[0] = -0
        background_vspeed[1] = -0
        background_vspeed[2] = -0.02
        background_vspeed[3] = -0.1
    }
    if (view_yview[0] &lt; 0) &amp;&amp; (obj_player.y &lt; obj_player.yprevious)
    {
        background_vspeed[0] = -0
        background_vspeed[1] = -0
        background_vspeed[2] = -0.02
        background_vspeed[3] = -0.1
    }
    if (view_yview[0] = 0) &amp;&amp; (obj_player.y &lt; obj_player.yprevious)
    {
        background_vspeed[0] = -0
        background_vspeed[1] = -0
        background_vspeed[2] = -0.02
        background_vspeed[3] = -0.1
    }
        //Falling//
    if (view_yview[0] &gt; 0) &amp;&amp; (obj_player.y &gt; obj_player.yprevious)
    {
        background_vspeed[0] = 0
        background_vspeed[1] = 0
        background_vspeed[2] = 0.02
        background_vspeed[3] = 0.1
    }
    if (view_yview[0] &lt; 0) &amp;&amp; (obj_player.y &gt; obj_player.yprevious)
    {
        background_vspeed[0] = 0
        background_vspeed[1] = 0
        background_vspeed[2] = 0.02
        background_vspeed[3] = 0.1
    }
    if (view_yview[0] = 0) &amp;&amp; (obj_player.y &gt; obj_player.yprevious)
    {
        background_vspeed[0] = 0
        background_vspeed[1] = 0
        background_vspeed[2] = 0.02
        background_vspeed[3] = 0.1
    }
        //Standing Still//
    if (view_yview[0] &gt; 0) &amp;&amp; (obj_player.y = obj_player.yprevious)
    {
        background_vspeed[0] = 0
        background_vspeed[1] = 0
        background_vspeed[2] = 0
        background_vspeed[3] = 0
    }
    if (view_yview[0] &lt; 0) &amp;&amp; (obj_player.y = obj_player.yprevious)
    {
        background_vspeed[0] = 0
        background_vspeed[1] = 0
        background_vspeed[2] = 0
        background_vspeed[3] = 0
    }
    if (view_yview[0] = 0) &amp;&amp; (obj_player.y = obj_player.yprevious)
    {
        background_vspeed[0] = 0
        background_vspeed[1] = 0
        background_vspeed[2] = 0
        background_vspeed[3] = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*///Parallax Desert
          //Backgrounds//
if (instance_exists(obj_player)) &amp;&amp; (parallax_tracking = 2)
{
        //Standing Still//
    if (view_xview[0] = 0) &amp;&amp; (obj_player.x = obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] &gt; 0) &amp;&amp; (obj_player.x = obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] &lt; 0) &amp;&amp; (obj_player.x = obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }

        //Moving Left//
    if (view_xview[0] &lt; 0) &amp;&amp; (obj_player.x &lt; obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] = 0) &amp;&amp; (obj_player.x &lt; obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] &gt; 0) &amp;&amp; (obj_player.x &lt; obj_player.xprevious)
    {
        background_hspeed[0] = -0
        background_hspeed[1] = -4.5
        background_hspeed[2] = -4
        background_hspeed[3] = -3.6
    }
    if (obj_player.x + 500 &gt; room_width) &amp;&amp; (obj_player.x &lt; obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }

        //Moving Right//
    if (view_xview[0] &lt; 0) &amp;&amp; (obj_player.x &gt; obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] = 0) &amp;&amp; (obj_player.x &gt; obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] &gt; 0) &amp;&amp; (obj_player.x &gt; obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 4.5
        background_hspeed[2] = 4
        background_hspeed[3] = 3.6
    }
    if (obj_player.x + 500 &gt; room_width) &amp;&amp; (obj_player.x &gt; obj_player.xprevious)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    
        //Friction//
        //Right//
    if (view_xview[0] &lt; 0) &amp;&amp; (obj_player.x &gt; obj_player.xprevious) &amp;&amp; (obj_player.hsp != 5)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] = 0) &amp;&amp; (obj_player.x &gt; obj_player.xprevious) &amp;&amp; (obj_player.hsp != 5)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] &gt; 0) &amp;&amp; (obj_player.x &gt; obj_player.xprevious) &amp;&amp; (obj_player.hsp != 5)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
        //Left//
    if (view_xview[0] &lt; 0) &amp;&amp; (obj_player.x &lt; obj_player.xprevious) &amp;&amp; (obj_player.hsp != -5)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] = 0) &amp;&amp; (obj_player.x &lt; obj_player.xprevious) &amp;&amp; (obj_player.hsp != -5)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
    if (view_xview[0] &gt; 0) &amp;&amp; (obj_player.x &lt; obj_player.xprevious) &amp;&amp; (obj_player.hsp != -5)
    {
        background_hspeed[0] = 0
        background_hspeed[1] = 0
        background_hspeed[2] = 0
        background_hspeed[3] = 0
    }
        //Jumping//
    if (view_yview[0] &gt; 0) &amp;&amp; (obj_player.y &lt; obj_player.yprevious)
    {
        background_vspeed[0] = -0
        background_vspeed[1] = -0
        background_vspeed[2] = -0.02
        background_vspeed[3] = -0.1
    }
    if (view_yview[0] &lt; 0) &amp;&amp; (obj_player.y &lt; obj_player.yprevious)
    {
        background_vspeed[0] = -0
        background_vspeed[1] = -0
        background_vspeed[2] = -0.02
        background_vspeed[3] = -0.1
    }
    if (view_yview[0] = 0) &amp;&amp; (obj_player.y &lt; obj_player.yprevious)
    {
        background_vspeed[0] = -0
        background_vspeed[1] = -0
        background_vspeed[2] = -0.02
        background_vspeed[3] = -0.1
    }
        //Falling//
    if (view_yview[0] &gt; 0) &amp;&amp; (obj_player.y &gt; obj_player.yprevious)
    {
        background_vspeed[0] = 0
        background_vspeed[1] = 0
        background_vspeed[2] = 0.02
        background_vspeed[3] = 0.1
    }
    if (view_yview[0] &lt; 0) &amp;&amp; (obj_player.y &gt; obj_player.yprevious)
    {
        background_vspeed[0] = 0
        background_vspeed[1] = 0
        background_vspeed[2] = 0.02
        background_vspeed[3] = 0.1
    }
    if (view_yview[0] = 0) &amp;&amp; (obj_player.y &gt; obj_player.yprevious)
    {
        background_vspeed[0] = 0
        background_vspeed[1] = 0
        background_vspeed[2] = 0.02
        background_vspeed[3] = 0.1
    }
        //Standing Still//
    if (view_yview[0] &gt; 0) &amp;&amp; (obj_player.y = obj_player.yprevious)
    {
        background_vspeed[0] = 0
        background_vspeed[1] = 0
        background_vspeed[2] = 0
        background_vspeed[3] = 0
    }
    if (view_yview[0] &lt; 0) &amp;&amp; (obj_player.y = obj_player.yprevious)
    {
        background_vspeed[0] = 0
        background_vspeed[1] = 0
        background_vspeed[2] = 0
        background_vspeed[3] = 0
    }
    if (view_yview[0] = 0) &amp;&amp; (obj_player.y = obj_player.yprevious)
    {
        background_vspeed[0] = 0
        background_vspeed[1] = 0
        background_vspeed[2] = 0
        background_vspeed[3] = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///New parallax grassland

/*background_x[1] = view_xview[0]
background_y[1] = view_yview[0]

background_x[2] = view_xview[0]
background_y[2] = view_yview[0]

background_x[3] = view_xview[0]
background_y[3] = view_yview[0]
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
