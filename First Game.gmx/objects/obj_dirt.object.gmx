<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dirt</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>obj_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if 
place_meeting(x + 32, y, obj_wall) 
&amp;&amp; place_meeting(x + 32, y + 32, obj_wall) 
&amp;&amp; place_meeting(x + 32, y - 32, obj_wall) 
&amp;&amp; place_meeting(x + 32, y, obj_wall)
&amp;&amp; place_meeting(x, y - 32, obj_wall)
&amp;&amp; place_meeting(x, y + 32, obj_wall)
&amp;&amp; place_meeting(x - 32, y - 32, obj_wall)
&amp;&amp; place_meeting(x - 32, y + 32, obj_wall)
&amp;&amp; place_meeting(x - 32, y, obj_wall)
    {
    
    }
    else
//inner corner
if 
place_meeting(x, y - 32, obj_wall) &amp;&amp; 
!place_meeting(x + 32, y - 32, obj_wall) &amp;&amp; 
place_meeting(x + 32, y, obj_wall) &amp;&amp; 
place_meeting(x, y + 32, obj_wall)
    {
    instance_change(obj_grass_innerleft, true);
    }
    else
 
if 
place_meeting(x, y - 32, obj_wall) &amp;&amp; 
!place_meeting(x - 32, y - 32, obj_wall) &amp;&amp; 
place_meeting(x - 32, y, obj_wall) &amp;&amp; 
place_meeting(x, y + 32, obj_wall)
    {
    instance_change(obj_grass_innerright, true);
    }
    else  
    
//top corners
if 
!place_meeting(x, y - 32, obj_wall) &amp;&amp; 
!place_meeting(x + 32, y, obj_wall) &amp;&amp; 
place_meeting(x - 32, y, obj_wall) &amp;&amp; 
place_meeting(x, y + 32, obj_wall)
    {
    instance_change(obj_grass_rightcorner, true);
    }
    else
    
if 
!place_meeting(x, y - 32, obj_wall) &amp;&amp; 
!place_meeting(x - 32, y, obj_wall) &amp;&amp; 
place_meeting(x + 32, y, obj_wall) &amp;&amp; 
place_meeting(x, y + 32, obj_wall)
    {
    instance_change(obj_grass_leftcorner, true);
    }
    else
    
if 
!place_meeting(x, y - 32, obj_wall) &amp;&amp; 
!place_meeting(x - 32, y, obj_wall) &amp;&amp; 
!place_meeting(x + 32, y, obj_wall) &amp;&amp; 
place_meeting(x, y + 32, obj_wall)
    {
    instance_change(obj_grass_topcorner, true);
    }
    else
    
//mid corners
if 
!place_meeting(x, y - 32, obj_wall) &amp;&amp; 
!place_meeting(x + 32, y, obj_wall) &amp;&amp; 
!place_meeting(x, y + 32, obj_wall) &amp;&amp; 
place_meeting(x - 32, y, obj_wall)
    {
    instance_change(obj_grass_mid_rightcorner, true);
    }
    else
    
if 
!place_meeting(x, y - 32, obj_wall) &amp;&amp; 
!place_meeting(x - 32, y, obj_wall) &amp;&amp; 
!place_meeting(x, y + 32, obj_wall) &amp;&amp; 
place_meeting(x + 32, y, obj_wall)
    {
    instance_change(obj_grass_mid_leftcorner, true);
    }
    else

//bottom corners
if 
place_meeting(x, y - 32, obj_wall) &amp;&amp; 
!place_meeting(x + 32, y, obj_wall) &amp;&amp; 
!place_meeting(x, y + 32, obj_wall) &amp;&amp; 
place_meeting(x - 32, y, obj_wall)
    {
    instance_change(obj_grass_bottom_rightcorner, true);
    }
    else
    
if 
place_meeting(x, y - 32, obj_wall) &amp;&amp; 
!place_meeting(x - 32, y, obj_wall) &amp;&amp; 
!place_meeting(x, y + 32, obj_wall) &amp;&amp; 
place_meeting(x + 32, y, obj_wall)
    {
    instance_change(obj_grass_bottom_leftcorner, true);
    }
    else

if 
!place_meeting(x, y + 32, obj_wall) &amp;&amp; 
!place_meeting(x - 32, y, obj_wall) &amp;&amp; 
!place_meeting(x + 32, y, obj_wall) &amp;&amp; 
place_meeting(x, y - 32, obj_wall)
    {
    instance_change(obj_grass_bottomcorner, true);
    }
    else
    
//mid sides
if 
!place_meeting(x, y - 32, obj_wall) &amp;&amp; 
place_meeting(x - 32, y, obj_wall) &amp;&amp; 
place_meeting(x + 32, y, obj_wall) &amp;&amp; 
place_meeting(x, y + 32, obj_wall)
    {
    instance_change(obj_grass, true);
    }
    else
    
if 
!place_meeting(x + 32, y, obj_wall) &amp;&amp; 
place_meeting(x - 32, y, obj_wall) &amp;&amp; 
place_meeting(x, y - 32, obj_wall) &amp;&amp; 
place_meeting(x, y + 32, obj_wall)
    {
    instance_change(obj_grass_right, true);
    }
    else
    
if 
!place_meeting(x - 32, y, obj_wall) &amp;&amp; 
place_meeting(x + 32, y, obj_wall) &amp;&amp; 
place_meeting(x, y - 32, obj_wall) &amp;&amp; 
place_meeting(x, y + 32, obj_wall)
    {
    instance_change(obj_grass_left, true);
    }
    else
    
if
!place_meeting(x, y + 32, obj_wall) &amp;&amp; 
place_meeting(x + 32, y, obj_wall) &amp;&amp; 
place_meeting(x, y - 32, obj_wall) &amp;&amp; 
place_meeting(x - 32, y, obj_wall)
    {
    instance_change(obj_grass_bottom, true);
    }
    else

if 
!place_meeting(x, y + 32, obj_wall) &amp;&amp; 
!place_meeting(x, y - 32, obj_wall) &amp;&amp; 
!place_meeting(x + 32, y, obj_wall) &amp;&amp; 
!place_meeting(x - 32, y, obj_wall)
    {
    instance_change(obj_grass_center, true);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
